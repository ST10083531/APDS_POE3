{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukeg\\\\Desktop\\\\SEM 2\\\\OPSC\\\\Part 2\\\\APDS7311_POE2\\\\APDS\\\\frontend\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [form, setForm] = useState({\n    name: \"\",\n    account_number: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  function updateForm(value) {\n    return setForm(prev => ({\n      ...prev,\n      ...value\n    }));\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    const userCredentials = {\n      ...form\n    };\n    await fetch(\"http://localhost:3001/user/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userCredentials)\n    }).then(response => response.json()).then(data => {\n      localStorage.setItem(\"jwt\", data.token);\n      setForm({\n        name: \"\",\n        account_number: \"\",\n        password: \"\"\n      });\n      navigate(\"/pay\");\n    }).catch(error => window.alert(\"Failed to log in: \" + error.message));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: form.name,\n        onChange: e => updateForm({\n          name: e.target.value\n        }),\n        placeholder: \"Username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: form.account_number,\n        onChange: e => updateForm({\n          account_number: e.target.value\n        }),\n        placeholder: \"Account Number\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: form.password,\n        onChange: e => updateForm({\n          password: e.target.value\n        }),\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"a+768jP7/d2tRZhQ8GUWLC7t+Sc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","form","setForm","name","account_number","password","navigate","updateForm","value","prev","onSubmit","e","preventDefault","userCredentials","fetch","method","headers","body","JSON","stringify","then","response","json","data","localStorage","setItem","token","catch","error","window","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/lukeg/Desktop/SEM 2/OPSC/Part 2/APDS7311_POE2/APDS/frontend/src/components/login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n    const [form, setForm] = useState({\r\n        name: \"\",\r\n        account_number: \"\",\r\n        password: \"\"\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    function updateForm(value) {\r\n        return setForm((prev) => ({ ...prev, ...value }));\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const userCredentials = { ...form };\r\n\r\n        await fetch(\"http://localhost:3001/user/login\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(userCredentials),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            localStorage.setItem(\"jwt\", data.token);\r\n            setForm({ name: \"\", account_number: \"\", password: \"\" });\r\n            navigate(\"/pay\");\r\n        })\r\n        .catch((error) => window.alert(\"Failed to log in: \" + error.message));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Login</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"text\" value={form.name} onChange={(e) => updateForm({ name: e.target.value })} placeholder=\"Username\" required />\r\n                <input type=\"text\" value={form.account_number} onChange={(e) => updateForm({ account_number: e.target.value })} placeholder=\"Account Number\" required />\r\n                <input type=\"password\" value={form.password} onChange={(e) => updateForm({ password: e.target.value })} placeholder=\"Password\" required />\r\n                <input type=\"submit\" value=\"Login\" />\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}