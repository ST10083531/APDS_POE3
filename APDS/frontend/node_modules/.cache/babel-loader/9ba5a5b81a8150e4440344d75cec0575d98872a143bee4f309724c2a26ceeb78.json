{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukeg\\\\Desktop\\\\SEM 2\\\\OPSC\\\\Part 2\\\\APDS7311_POE2\\\\APDS\\\\frontend\\\\src\\\\components\\\\postCreate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n  const [form, setForm] = useState({\n    user: \"\",\n    content: \"\",\n    image: \"\"\n  });\n  const navigate = useNavigate();\n\n  //Retreieve the user from localStorage when the component mounts\n  useEffect(() => {\n    const savedUser = localStorage.getItem(\"name\"); // Make sure the user is saved in localStorage as a string\n    if (savedUser) {\n      setForm(prev => ({\n        ...prev,\n        user: savedUser\n      }));\n    } else {\n      // Redirect to login if there is no user\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  //Function to handle the form submission\n  async function onSubmit(e) {\n    e.preventDefault();\n    const token = localStorage.getItem(\"jwt\");\n    const newPost = {\n      user: form.user,\n      content: form.content,\n      image: form.image\n    };\n    try {\n      const response = await fetch(\"https://localhost:3001/post/upload\", {\n        //Change to http for local development\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(newPost)\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not okay\");\n      }\n      const result = await response.json();\n      console.log(\"Post created:\", result);\n      setForm({\n        user: form.user,\n        content: \"\",\n        image: \"\"\n      }); //Reset the form but keep user\n      navigate(\"/\");\n    } catch (error) {\n      window.alert(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"header\",\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"user\",\n          value: form.user,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"content\",\n          value: form.content,\n          onChange: e => updateForm({\n            content: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          id: \"image\",\n          accept: \"image/*\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Post\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(CreatePost, \"hc+Wy9ySwdTl0OeF5cHPPiS7070=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","CreatePost","_s","form","setForm","user","content","image","navigate","savedUser","localStorage","getItem","prev","updateForm","value","onSubmit","e","preventDefault","token","newPost","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","console","log","error","window","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","disabled","onChange","target","accept","handleImageChange","_c","$RefreshReg$"],"sources":["C:/Users/lukeg/Desktop/SEM 2/OPSC/Part 2/APDS7311_POE2/APDS/frontend/src/components/postCreate.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nexport default function CreatePost() {\r\n    const [form, setForm] = useState({\r\n        user: \"\",\r\n        content: \"\",\r\n        image: \"\"\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    //Retreieve the user from localStorage when the component mounts\r\n    useEffect(() => {\r\n        const savedUser = localStorage.getItem(\"name\"); // Make sure the user is saved in localStorage as a string\r\n        if (savedUser) {\r\n            setForm((prev) => ({\r\n                ...prev,\r\n                user: savedUser,\r\n            }));\r\n        } else {\r\n            // Redirect to login if there is no user\r\n            navigate(\"/login\");\r\n        }\r\n    }, [navigate]);\r\n\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value};\r\n        });\r\n    }\r\n\r\n    //Function to handle the form submission\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const token = localStorage.getItem(\"jwt\");\r\n\r\n        const newPost = {\r\n            user: form.user,\r\n            content: form.content,\r\n            image: form.image\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(\"https://localhost:3001/post/upload\", { //Change to http for local development\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(newPost),\r\n\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\"Network response was not okay\");\r\n            }\r\n            const result = await response.json();\r\n            console.log(\"Post created:\", result);\r\n            setForm({ user: form.user, content: \"\", image: \"\"}); //Reset the form but keep user\r\n            navigate(\"/\");\r\n        } catch (error) {\r\n            window.alert(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3 className=\"header\">Create New Post</h3>\r\n            <form onSubmit={onSubmit} className=\"form\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"user\">User</label>\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"user\"\r\n                    value={form.user}\r\n                    disabled\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"content\"\r\n                    value={form.content}\r\n                    onChange={(e) => updateForm({ content: e.target.value})}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"image\">Image</label>\r\n                    <input\r\n                    type=\"file\"\r\n                    className=\"form-control\"\r\n                    id=\"image\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleImageChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                    type=\"submit\"\r\n                    value=\"Create Post\"\r\n                    className=\"btn btn-primary\"\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}